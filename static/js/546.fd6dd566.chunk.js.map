{"version":3,"file":"static/js/546.fd6dd566.chunk.js","mappings":"0MACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAA0F,6BAA1F,EAA8H,wB,iDCM/G,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAeN,OACE,gBAAKC,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qBACA,kBAAMC,SAfS,SAAAC,GACnBA,EAAEC,iBACFf,EAASgB,EAAAA,EAAAA,MAAqB,CAAEb,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAWsBK,UAAWC,EAAQK,aAAa,MAA9D,WACE,SAAC,KAAD,CACEC,KAAK,QACLR,MAAOP,EACPgB,SAAUZ,EACVE,KAAK,QACLW,MAAM,WAER,SAAC,KAAD,CACEF,KAAK,WACLR,MAAOL,EACPI,KAAK,WACLW,MAAM,WACND,SAAUZ,KAEZ,SAACc,EAAA,EAAD,CAAQC,SAvBO,WACrB,GAAqB,KAAjBnB,EAAMoB,QAAqC,KAApBlB,EAASkB,OAAe,OAAO,EAsBlCC,GAAkBN,KAAK,SAASO,QAAQ,YAA1D","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginPage_form__h3Le9\",\"wrap\":\"LoginPage_wrap__xRSGr\",\"container\":\"LoginPage_container__ZK1ET\",\"text\":\"LoginPage_text__MC-sR\"};","import { useState } from 'react';\nimport s from './LoginPage.module.css';\nimport { CssTextField as Input } from '../../UI/stylesUi';\nimport Button from '@mui/material/Button';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth/auth-operations';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const hundleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  const inspectInpusts = () => {\n    if (email.trim() === '' || password.trim() === '') return true;\n  };\n\n  return (\n    <div className={s.wrap}>\n      <div className={s.container}>\n        <h1 className={s.text}>Log in</h1>\n        <form onSubmit={hundleSubmit} className={s.form} autoComplete=\"off\">\n          <Input\n            type=\"email\"\n            value={email}\n            onChange={handleChange}\n            name=\"email\"\n            label=\"email\"\n          />\n          <Input\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            label=\"password\"\n            onChange={handleChange}\n          />\n          <Button disabled={inspectInpusts()} type=\"submit\" variant=\"contained\">\n            Sign in\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":["LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","className","s","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange","label","Button","disabled","trim","inspectInpusts","variant"],"sourceRoot":""}